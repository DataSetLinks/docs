openapi: 3.0.3
info:
  title: DataLinks
  version: 1.0.0
servers:
  - url: https://api.datasetlinks.com/api
    description: production server

security:
  - bearerAuth: [ ]
paths:

  /data/:
    get:
      summary: Fetch datasets
      description: Retrieve all available datasets
      tags:
        - datasets
      responses:
        '200':
          $ref: '#/components/responses/ListOfDatasets'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /data/{namespace}:
    get:
      summary: Fetch datasets in namespace
      description: Retrieve dataset for a specific namespace.
      tags:
        - datasets
      parameters:
        - $ref: '#/components/parameters/Namespace'
      responses:
        '200':
          $ref: '#/components/responses/ListOfDatasets'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /ingest/new/{namespace}/{objectName}:
    post:
      summary: Create new dataset
      description: Creates a new dataset within a specified namespace.
      tags:
        - ingest
        - datasets
      parameters:
        - $ref: '#/components/parameters/Namespace'
        - $ref: '#/components/parameters/ObjectName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetResponse'
      responses:
        '201':
          description: Dataset created successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
  /ingest/{namespace}/{objectName}:
    post:
      summary: Ingest data
      description: Load data into specified dataset
      tags:
        - ingest
      parameters:
        - $ref: '#/components/parameters/Namespace'
        - $ref: '#/components/parameters/ObjectName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequest'
      responses:
        '200':
          description: Successful ingestion response.
        '401':
          $ref: '#/components/responses/Unauthorized'
  /infer/preview:
    post:
      summary: Preview
      description: Process data like in ingest but don't save in dataset
      tags:
        - ingest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequest'
      responses:
        '200':
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
  /data/{username}/{namespace}/{objectName}:
    post:
      summary: Query data
      description: Execute ontology query
      tags:
        - query
      parameters:
        - $ref: '#/components/parameters/Namespace'
        - $ref: '#/components/parameters/ObjectName'
        - $ref: '#/components/parameters/Username'
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/OntologyRequest'
            examples:
              movies:
                value: "OntologyObject(\"Movies\").filter(\"name==The Matrix\").searchAround().find(\"Actor\").filter(\"name==Keanu Reeves\").get()"
              empty:
                value: ""
      responses:
        '200':
          description: Successful response with the ontology data object.
        '401':
          $ref: '#/components/responses/Unauthorized'

  /links/{username}/{namespace}/{objectName}:
    get:
      summary: Load links
      description: Load links for specified dataset
      tags:
        - links
      parameters:
        - $ref: '#/components/parameters/Namespace'
        - $ref: '#/components/parameters/ObjectName'
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: List of links related to specified dataset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinksResponse'
        '204':
          description: There are no links assosiated with specified dataset
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: "Rebuild links"
      description: "Recalculate links for specified dataset"
      tags:
        - links
      parameters:
        - $ref: '#/components/parameters/Namespace'
        - $ref: '#/components/parameters/ObjectName'
        - $ref: '#/components/parameters/Username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinksRequest'
      responses:
        '200':
          description: Success

  /links/preview/{username}/{namespace}/{objectName}:
    post:
      summary: "Preview links"
      description: "Show what recalulate would done"
      tags:
        - links
      parameters:
        - $ref: '#/components/parameters/Namespace'
        - $ref: '#/components/parameters/ObjectName'
        - $ref: '#/components/parameters/Username'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinksRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinksResponse'

  /ontology/{username}/{namespace}/{objectName}:
    get:
      description: load ontology
      tags:
        - ontology
      parameters:
        - $ref: '#/components/parameters/Namespace'
        - $ref: '#/components/parameters/ObjectName'
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyResponse'
        '204':
          description: There is no ontology for specified dataset
    post:
      description: save ontology
      tags:
        - ontology
      parameters:
        - $ref: '#/components/parameters/Namespace'
        - $ref: '#/components/parameters/ObjectName'
        - $ref: '#/components/parameters/Username'
      responses:
        '200':
          description: Success

components:
  parameters:
    Namespace:
      name: namespace
      in: path
      required: true
      description: Namespace for the dataset.
      schema:
        type: string
    ObjectName:
      name: objectName
      in: path
      required: true
      description: Name of the new dataset.
      schema:
        type: string
    Username:
      name: username
      in: path
      required: true
      description: The username associated with the request.
      schema:
        type: string
  schemas:
    IngestRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              col1:
                type: string
                example: "foobar"
              col2:
                type: integer
                example: 123
              freeText:
                type: string
                example: "Some random free text with a code, the code is 777"
        infer:
          type: object
          properties:
            columns:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: "code"
                  description:
                    type: string
                    example: "code present in the free text"
                  deriveFrom:
                    type: string
                    example: "freeText"
        link:
          type: object
          properties:
            ExactMatch:
              type: string
              nullable: true
              example: null
      required:
        - data
        - infer
    OntologyRequest:
      type: string
      example: "OntologyObject(\"objectName\").get()"
      description: for details check [Querying data](/Querying_data)
    LinksResponse:
      type: array
      items:
        type: object
        properties:
          destination:
            type: string
            example: "ri.user.examples.companies.other addresses"
          origin:
            type: string
            example: "ri.user.examples.companies.nationalities"
          linkType:
            type: string
            example: "ExactMatch"
          matchType:
            type: string
            example: "ExactMatch"
          hits:
            type: integer
            example: 5
      example:
        - destination: "ri.user.examples.companies.other addresses"
          origin: "ri.user.examples.companies.nationalities"
          linkType: "ExactMatch"
          matchType: "ExactMatch"
          hits: 5
    LinksRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        link:
          type: object
      example:
        data:
          - name: "Braveheart"
            year: "1995"
            budget: "72000000"
            director: "Mel Gibson"
          - name: "Argo"
            year: "2012"
            budget: "44500000"
            director: "Ben Affleck"
        link:
          ExactMatch: null
          GeoMatch: null
    CreateDatasetResponse:
      type: object
      properties:
        isPrivate:
          type: boolean
          description: Sets the privacy status of the dataset. Set it to `true` for private datasets.
          example: true
      required:
        - isPrivate
    DatasetsResponse:
      type: array
      items:
        properties:
          username:
            type: string
            description: The username associated with the data.
          nameWithNamespace:
            type: string
            description: The name concatenated with the namespace.
          public:
            type: string
            description: Indicates whether the data is public or private.
            enum:
              - Public
              - Private
    OntologyResponse:
      type: array
      properties:
        destination:
          type: string
        hits:
          type: number
        linkType:
          type: string
        matchType:
          type: string
        origin:
          type: string
      example:
        - "destination": "ri.user.examples.actor.name"
          "hits": 6
          "linkType": "ExactMatch"
          "matchType": "ExactMatch"
          "origin": "ri.user.examples.movies.director"


  responses:
    Unauthorized:
      description: Unauthorized. This error occurs if the authentication token is missing or invalid.
    ListOfDatasets:
      description: Successful response containing data with namespace details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DatasetsResponse'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: |
        Use a Bearer token for authentication. Submit the token using the `Authorization` 
        header: `Authorization: Bearer <token>`.